Given an array of integers nums.

A pair (i,j) is called good if nums[i] == nums[j] and i < j.

Return the number of good pairs.

 

Example 1:

Input: nums = [1,2,3,1,1,3]
Output: 4
Explanation: There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.

/**
 * @param {number[]} nums
 * @return {number}
 */
// (frequency * frequency - 1) /2 = pairs 

// var numIdenticalPairs = function(nums) {
//     var goodPairs = 0;
//     for(var i=0; i < nums.length; i++) {
//         for(var j=i+1; j < nums.length; j++) {
//             if (nums[i] === nums[j]) {
//                 goodPairs++;
//             }
//         }
//     }
//     return goodPairs;
    
// };

var numIdenticalPairs = function(nums) {
// calculating the frequency
    var frequency = [];
     for(var i=0; i < nums.length; i++) {
        if (frequency[nums[i]]) {
            frequency[nums[i]]++;
        } else {
         frequency[nums[i]] = 1;   
        }
     }
    
    var goodPairs = 0;
    for(var i=0; i < nums.length; i++) {
        if (frequency[nums[i]]) {
            goodPairs += (frequency[nums[i]] * (frequency[nums[i]] - 1))/2;
            frequency[nums[i]] = 0; // resetting to zero to avoid re-calculation.
        }
    }
     return goodPairs;
};
