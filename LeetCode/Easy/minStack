/**
 * initialize your data structure here.
 */
var MinStack = function() {
    this.myStack=[];
};

/** 
 * @param {number} x
 * @return {void}
 */
MinStack.prototype.push = function(x) {
    if(this.myStack.length) {
        var lastMin = this.myStack[this.myStack.length - 1].min; 
         this.myStack.push({ele: x, min: lastMin < x ? lastMin : x });
    } else {
         this.myStack.push({ele: x, min: x });
    }
   
};

/**
 * @return {void}
 */
MinStack.prototype.pop = function() {
    if(this.myStack.length) {
        var popedObj = this.myStack.pop();
       return popedObj.ele; 
    }
};

/**
 * @return {number}
 */
MinStack.prototype.top = function() {
    if(this.myStack.length) {
     var readObj = this.myStack[this.myStack.length-1];
     return readObj.ele;
    }
};

/**
 * @return {number}
 */
MinStack.prototype.getMin = function() {
    if(this.myStack.length) {
      var readObj = this.myStack[this.myStack.length-1];
        console.log("***");
     return readObj.min;
    }
};

/** 
 * Your MinStack object will be instantiated and called as such:
 * var obj = Object.create(MinStack).createNew()
 * obj.push(x)
 * obj.pop()
 * var param_3 = obj.top()
 * var param_4 = obj.getMin()
 */
